# Copyright 2024 Deutsche Telekom IT GmbH
#
# SPDX-License-Identifier: Apache-2.0

# -- Deployment Configuration --








# -- Sets the number of replicas for the deployment.
replicaCount: 1

# -- Specifies the image details such as repository, tag, and pull policy.
image:
  repository: example.devops.company.de/internal/example/horizon/develop
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: develop

# -- List of pull secrets that are required for pulling the the container images.
imagePullSecrets: []

nameOverride: polaris
fullnameOverride: ""

# -- RBAC (Role-Based Access Control) specific configuration.
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Specifies the annotationsfor the pod.
podAnnotations: {}
# -- Specifies the labels for the pod.
podLabels: {}

# -- Security context set for the pod.
podSecurityContext:
  fsGroup: 1000
  supplementalGroups: [1000]

# -- Security context set for the container.
securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  privileged: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  capabilities:
    drop:
    - ALL

# -- Specifies the service type and port as well as the labels for the service.
service:
  type: ClusterIP
  port: http
  labels:
    developer.telekom.de/namespace: integration
    developer.telekom.de/cluster: AWS-Integration
    developer.telekom.de/product: horizon
    developer.telekom.de/subproduct: polaris
    developer.telekom.de/team: pandora
    developer.telekom.de/environment: integration
    developer.telekom.de/expose-on-statuspage: 'true'

# -- Specifies whether ingress is enabled, sets the hostname(s) and Ingress annotations.
ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limits and requests.
resources:
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 50m
    memory: 200Mi

# -- Kubernetes Liveness Probe configuration.
livenessProbe:
  httpGet:
    path: /actuator/health
    port: actuator
  initialDelaySeconds: 20
  periodSeconds: 10
  failureThreshold: 8
# -- Kubernetes Readiness Probe configuration.
readinessProbe:
  httpGet:
    path: /actuator/health
    port: actuator
  initialDelaySeconds: 20
  periodSeconds: 10
  failureThreshold: 8
# -- Kubernetes Startup Probe configuration.
startupProbe:
  httpGet:
    path: /actuator/health
    port: actuator
  initialDelaySeconds: 0
  periodSeconds: 1
  failureThreshold: 75

lifecycle:
#  preStop:
#    httpGet:
#      path: /actuator/shutdown
#      port: actuator
#      scheme: HTTP

# -- Horizontal Pod Autoscaler configuration.
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 8
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
- name: tmp
  emptyDir: {}
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- mountPath: /tmp
  name: tmp
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# Node selector for pod assignment.
nodeSelector: {}
# Tolerations for pod assignment.
tolerations: []
# Affinity for pod assignment.
affinity: {}

# -- Sets the deployment strategy for the deployment.
strategy: {}

# -- ServiceMonitor configuration.
monitoring:
  serviceMonitor:
    enabled: true
    selector: selector
    targetLabels:
      - developer.telekom.de/cluster
      - developer.telekom.de/namespace
      - developer.telekom.de/product
      - developer.telekom.de/subproduct
      - developer.telekom.de/team
      - developer.telekom.de/environment
      - app

# -- Custom environment variables
customEnv: {}

commonHorizon:
  # -- Sets the issuerUrl that is used for authentication.
  issuerUrl: https://keycloak.example.domain.com/auth/realms/example

  # -- Specifies Kafka broker details for common Horizon settings, including broker addresses, groupId, linger time, acknowledgment settings, and compression options.
  kafka:
    brokers: kafka:9092
    groupId: polaris
    lingerMs: 5
    acks: 1
    compression:
      enabled: true
      type: snappy

  # -- Specifies namespace for the informer that watches the custom resources.
  informer:
    namespace: default

  # -- Sets the default environment.
  defaultEnvironment: default

  # -- Sets the timeout duration (in milliseconds) for the publishing process.
  publishingTimeoutMs: 45000

  # -- Sets the log level for general logging.
  logLevel: WARN

  # -- Configures tracing settings, including debug mode, Jaeger collector base URL, and sampler probability.
  tracing:
    debugEnabled: false
    jaegerCollectorBaseUrl: http://localhost:14268
    samplerProbability: "1.0"

  # -- Enables or disables JMX remote configuration.
  jmxRemote:
    enabled: false

polaris:
  # -- Max connections: Maximum allowed connections.
  maxConnections: 100

  # -- Max timeout: Maximum timeout duration.
  maxTimeout: 30000

  # -- Iris configuration: Authentication details for Iris, including the token endpoint, clientId, and client secret.
  iris:
    tokenEndpoint: irisUrl
    clientId: clientId
    clientSecret: secret

  # -- Informer namespace: Configuration for the informer, including default namespace.
  informer:
    pods:
      namespace: default

  # -- OffsetMins: Offset duration to adjust the time before considering states as delivered.
  offsetMins:
    deliveringStates: 15

  # -- Polling: Configuration for polling mechanism.
  polling:
    intervalMs: 30000
    batchSize: 10

  # -- Picking: Timeout duration for the picking process.
  picking:
    timeoutMs: 5000

  # -- Request: Configuration related to handling requests.
  request:
    cooldownResetMins: 90
    scheduledThreadpool:
      size: 50
    delayMins: 5
    successfulStatusCodes: 200,201,202,204

  # -- Republish: Configuration for republishing mechanism.
  republish:
    threadpool:
      maxSize: 50
      coreSize: 50
      queueCapacity: 50
    batchSize: 100
    timeoutMs: 5000

  # -- Mongo configuration: Set clientId and mongo URL for mongo configuration.
  mongo:
    clientId: polaris
    url: mongodbUrl

  # -- SubscriptionCheck: Configuration related to subscription checking.
  subscriptionCheck:
    threadpool:
      maxSize: 50
      coreSize: 50
      queueCapacity: 50

  # -- Cache configuration: Define cache service DNS.
  cache:
    serviceDNS: cache
