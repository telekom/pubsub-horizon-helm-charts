# Copyright 2024 Deutsche Telekom IT GmbH
#
# SPDX-License-Identifier: Apache-2.0

# -- Deployment Configuration --

# -- Sets the number of replicas for the deployment.
replicaCount: 1

# -- Specifies the image details such as repository, tag, and pull policy.
image:
  repository: registry.example.domain.com/horizon/starlight
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: develop

# -- List of pull secrets that are required for pulling the the container images.
imagePullSecrets: []

nameOverride: starlight
fullnameOverride: ""

extraLabels:
  app.kubernetes.io/component: event-producer
  app.kubernetes.io/part-of: horizon-runtime
  ei.telekom.de/product: horizon
  ei.telekom.de/platform: o28m
  ei.telekom.de/environment: integration
  ei.telekom.de/zone: aws

# -- RBAC (Role-Based Access Control) specific configuration.
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Specifies the annotationsfor the pod.
podAnnotations: {}
# -- Specifies the labels for the pod.
podLabels: {}

# -- Security context set for the pod.
podSecurityContext:
  fsGroup: 1000
  supplementalGroups: [1000]

# -- Security context set for the container.
securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  privileged: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  capabilities:
    drop:
    - ALL

# -- Specifies the service type and port as well as the labels for the service.
service:
  type: ClusterIP
  port: http
  labels:
    ei.telekom.de/product: horizon
    ei.telekom.de/environment: integration

# -- Specifies whether ingress is enabled, sets the hostname(s) and Ingress annotations.
ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limits and requests.
resources:
  limits:
    cpu: 1
    memory: 500Mi
  requests:
    cpu: 50m
    memory: 200Mi

# -- Kubernetes Liveness Probe configuration.
livenessProbe:
  httpGet:
    path: /actuator/health
    port: actuator
  initialDelaySeconds: 20
  periodSeconds: 10
  failureThreshold: 8
# -- Kubernetes Readiness Probe configuration.
readinessProbe:
  httpGet:
    path: /actuator/health
    port: actuator
  initialDelaySeconds: 20
  periodSeconds: 10
  failureThreshold: 8
# -- Kubernetes Startup Probe configuration.
startupProbe:
  httpGet:
    path: /actuator/health
    port: actuator
  initialDelaySeconds: 0
  periodSeconds: 1
  failureThreshold: 75

lifecycle:
  #preStop:
  #  exec:
  #    command: ["sleep", "15"]

# -- Horizontal Pod Autoscaler configuration.
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 8
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
- name: tmp
  emptyDir: {}
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- mountPath: /tmp
  name: tmp
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# Node selector for pod assignment.
nodeSelector: {}
# Tolerations for pod assignment.
tolerations: []
# Affinity for pod assignment.
affinity: {}

# -- ServiceMonitor configuration.
monitoring:
  serviceMonitor:
    enabled: true
    selector: selector
    targetLabels:
      - app.kubernetes.io/instance
      - ei.telekom.de/product
      - ei.telekom.de/environment
      - ei.telekom.de/zone

# -- Termination grace period (in seconds) for the pod. We set a default value of 45 seconds because commonHorizon.publishingTimeoutMs is set to 45000 milliseconds.
terminationGracePeriodSeconds: 45

# -- Custom environment variables
customEnv: {}

commonHorizon:
  # -- Sets the issuerUrl that is used for authentication.
  issuerUrl: https://keycloak.example.domain.com/auth/realms/example

  # -- Specifies Kafka broker details for common Horizon settings, including broker addresses, groupId, linger time, acknowledgment settings, and compression options.
  kafka:
    brokers: kafka:9092
    groupId: starlight
    lingerMs: 5
    acks: 1
    compression:
      enabled: true
      type: snappy

  # -- Specifies namespace for the informer that watches the custom resources.
  informer:
    namespace: default

  # -- Sets the default environment.
  defaultEnvironment: default

  # -- Sets the timeout duration (in milliseconds) for the publishing process.
  publishingTimeoutMs: 45000

  # -- Sets the log level for general logging.
  logLevel: WARN

  # -- Configures tracing settings, including debug mode, Jaeger collector base URL, and sampler probability.
  tracing:
    debugEnabled: false
    jaegerCollectorBaseUrl: http://localhost:14268
    samplerProbability: "1.0"

  # -- Enables or disables JMX remote configuration.
  jmxRemote:
    enabled: false

starlight:
  # -- Configure Starlight features such as publisherCheck, schemaValidation, and customPublishingTopics.
  features:
    publisherCheck: true
    schemaValidation: false
    customPublishingTopics: []

  # -- Configuration for communication with the ENI API. Only used for schema validation feature, which is not available yet in the open source release of Horizon - can be ignored for Horizon OSS.
  eniapi:
    baseurl: https://eniapi.example.domain.com/api/v1
    auth:
      issuerUrl: https://keycloak.example.domain.com/auth/realms/example
      clientId: clientId
      clientSecret: secret














